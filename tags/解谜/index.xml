<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>解谜 on 简陋的网站</title>
    <link>https://example.org/tags/%E8%A7%A3%E8%B0%9C/</link>
    <description>Recent content in 解谜 on 简陋的网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jan 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://example.org/tags/%E8%A7%A3%E8%B0%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>方案</title>
      <link>https://example.org/posts/brain-teaser-information/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/brain-teaser-information/</guid>
      <description>有1000个一模一样的瓶子，其中有999瓶是普通的水，有一瓶是毒药。任何喝下毒药的生物都会在一星期之后死亡。现在，你只有10只小白鼠和一星期的时间，如何检验出哪个瓶子里有毒药？
解答 只利用10只小白鼠做实验，一个可行的想法是给每只小白鼠注射若干瓶中的液体，如果我们能巧妙的规划每个小白鼠注射哪几瓶的液体，那么就可以根据小白鼠的死亡情况推出哪瓶液体有毒。
于是这个问题变成一个数学问题。
我们先来看看这10个小白鼠一共能表达多少种不同的结果。一周后，每个小白鼠只有两种情况，生存或死亡，所以10个小白鼠一共有210=1024种情况。而1000瓶液体中只有一瓶有毒，只有1000种情况。所以10个小白鼠足够用来表达所有情况。
我们将小白鼠的死亡情况和哪瓶是毒药的情况一一对应，就能得到一个可行的注射方案。
死亡情况哪瓶是毒药的情况注射方案 1号小白鼠死亡1号瓶有毒1号瓶注射给1号小白鼠 2号小白鼠死亡2号瓶有毒2号瓶注射给2号小白鼠 3号小白鼠死亡3号瓶有毒3号瓶注射给3号小白鼠 4号小白鼠死亡4号瓶有毒4号瓶注射给4号小白鼠 5号小白鼠死亡5号瓶有毒5号瓶注射给5号小白鼠 6号小白鼠死亡6号瓶有毒6号瓶注射给6号小白鼠 7号小白鼠死亡7号瓶有毒7号瓶注射给7号小白鼠 8号小白鼠死亡8号瓶有毒8号瓶注射给8号小白鼠 9号小白鼠死亡9号瓶有毒9号瓶注射给9号小白鼠 10号小白鼠死亡10号瓶有毒10号瓶注射给10号小白鼠 1、2号小白鼠死亡11号瓶有毒11号瓶注射给1、2号小白鼠 1、3号小白鼠死亡12号瓶有毒12号瓶注射给1、3号小白鼠 …… 虽然有些麻烦，但终究能得到一个可行方案。当然，利用二进制的一些性质，我们也有办法让它简单一些。
将每个瓶子的编号转换成二进制，在前面补0直到其拥有10位，将这10位和10个小白鼠对应，0代表不注射，1代表注射。
比如编号400，转为二进制0110010000，这表示给2、3、6号小白鼠注射第400号瓶中的液体。
一周后，根据小白鼠死亡情况写出二进制，在转回十进制便是有毒的瓶子的编号。
12个外观一致的小球，其中11个质量一致，1个质量不同，用一个天平，如何只称3次找到这个小球？</description>
    </item>
    
    <item>
      <title>真话假话</title>
      <link>https://example.org/posts/brain-teaser-true-false/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/brain-teaser-true-false/</guid>
      <description>多少人 一场聚会中有100个人参加，其中有一部分人只说真话，剩下的只说假话。现在你向每个提问：“这个聚会中有几个只说假话的人？”。第1个人回答1，第2个人回答2，……，第100个人回答100。只说真话和只说假话的人各有多少？
解答 显然，所有只说真话的人的回答应该是一致的，而题目中每个人的回答都不同，说明只说真话的人不超过1个。
尝试假设没有只说真话的人，即100个人全是只说假话的人，那么回答100的那个人说了真话，与假设矛盾。
所以有1个只说真话的人，99个只说假话的人。
一场聚会中有100个人参加，其中有一部分人只说真话，剩下的只说假话。一部分人相互握了手。现在你向每个人提问：“你和多少说真话的人握了手？”。第1个人回答0，第2个人回答1，……，第100个人回答99。只说真话和只说假话的人各有多少？
解答 要注意到这道题并不是每两个人之间都握手了，这是和上一题最大的不同。
我们尝试从不同角度入手解这道题。
（一）
假设没有只说真话的人，那么所有人都不可能和只说真话的人握过手，第一个人说的真话，矛盾。
假设有1个只说真话的人，显然这个人是第一个人，我们可以构建出一种可能的情况：第一个人没有和任何一个人握过手，于是其他人说的都是假话，符合题目条件。
假设有2个只说真话的人，显然这两个人的回答应该是一样的，这和题目条件矛盾。
继续讨论下去，发现至少会有两个只说真话的人的回答应该是一样的。所以全部和题目条件矛盾。
“一些人相互握手，一定会有至少两个人握手次数相同”的证明：设总人数为n。于是每个人的握手次数只可能是0至n-1中的某个数，一共n种情况。然而握手0次和握手n-1次的人不可能同时出现，所以这n个人中每人的握手次数只有n-1个可能情况。根据鸽笼原理，必然有两个人握手次数相同。
经过上述讨论，排除掉不可能的情况，剩下的唯一的有可能的情况就是答案：有1个说真话的人，99个说假话的人。
（二）
先看第100个人，如果他说的是真话，这意味着第100个人和其他所有人都握手了，并且其他的人也都是只说真话的人。而第一个人说握手0次，这显然相互矛盾。所有第100个人说的假话。
再看第99个人，如果他说的是真话，由于已经知道第100个人说的假话，我们推出第99个人和第1个至98个人都握手了，并且第1个至98个人也都是只说真话的人。同上，和第一个人说的矛盾。
以此类推，第2个至第100个人说的都是假话。
对于第一个人，显然他说的是真话。所以最终答案是有1个说真话的人，99个说假话的人。</description>
    </item>
    
    <item>
      <title>古典密码</title>
      <link>https://example.org/posts/puzzle-cryptography/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/puzzle-cryptography/</guid>
      <description>单表替换密码 按照替换表，将明文中每个字母替换成另一个字母形成密文。替换表可以自定义，也可以使用一些现成的，如下。
Caesar 凯撒密码
将每个字母在字母表上向左或向右按照一定的位数（密钥）进行移动。
ROT13
密钥为13的凯撒密码。
Atbash
所有 A 都替换为 Z，所有 B 都替换为 Y，依此类推。
Affine Cipher 仿射密码
字母转编号，A=0、B=1……
加密：E(x) = (ax + b) mod 26
解谜：D(x) = (x - b)/a mod 26
a、b为密钥，a和26互质
旗语
A / 1 B / 2 C / 3确认 / 正确 D / 4 E / 5错误(连打8次) F / 6 G / 7 H / 8 I / 9 J字母记号 K / 0 L M N O P Q R S T U V W X Y Z 待机 / 空格 数字记号(#) 错误 / 注意 取消 / 废除 /忽略以前的信号 移位密码 将明文中字母重新排序形成密文。</description>
    </item>
    
    <item>
      <title>常见谜题元素</title>
      <link>https://example.org/posts/puzzle-classic-puzzle/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/puzzle-classic-puzzle/</guid>
      <description>常见谜题元素 灯谜 灯谜一般由谜面、谜目和谜底组成。
灯谜往往利用汉语字词多意的特点，不把谜面作原意解释。
对于出灯谜者，需要注意：谜面成文；谜底若多于一个字，也要成文；谜底的字不能出现在谜面中等。
灯谜的构成方法大体有两种：离合和会意。
离合：要将某些字进行拆散和拼装以形成谜底。谜面中存在作为部件的字和作为提示离合方式的字，且不能有多余的废字。例：半导体(打一字)——付。
会意：就是按照谜面的意义猜出谜底。为了让灯谜更有意思，往往要按照不同的角度理解谜面或谜底。例：五十场婚礼（打一花卉）——百合。
谜格丰富了灯谜的规则，也使灯谜更加复杂。由于谜格众多，这里不再赘述，请移步百度百科：谜格
拼图 魔方 迷宫 找规律 推理题 纸笔谜题 桌游 纵横字谜 推箱子 据说推箱子最早叫“仓库番”，由今林宏行在1981年编写。推箱子规则简单却有着丰富的变化。
至今，推箱子依旧不停的出现各种变种。3D推箱子 Stephen&amp;rsquo;s Sausage Roll。baba is you 中将编程思想融入推箱子。递归推箱子 Patrick&amp;rsquo;s Parabox 等等等。
在线推箱子
情景猜谜（海龟汤） 这是一种游戏，出题者先讲一个简短的故事，故意忽略掉一些重要信息而使得故事听起来十分离谱。猜题者通过不断向出题者提问（提问者只能回答：“是”、“否”、“没有关系”）尝试找出真相。
情景猜谜又叫海龟汤，我觉得可能是因为这个非常经典的题目：一个人去餐馆点了一份海龟汤，喝完一口就哭了。
于是，题目又叫汤面，答案又叫汤底。
密室 记得我小时候在电脑上见过的最早的密室游戏还是用flash做出来的。当时有个叫深红房间的游戏，我玩到一半卡住了去找攻略，才知道有个旮旯非常难点到。现在我们已经能玩到很多密室类的游戏，比较有人气的有 the room 系列，绣湖系列等。
网络迷踪（Geoguessr、图寻） 综合运用各种知识，找出照片的拍摄位置甚至时间。
图寻
通过这个网站给出的文档，我们知道，要想玩转网络迷踪，我们除了一些天文地理知识，最好还要掌握各国文字特征、交通情况、建筑风格，甚至镜头类型、街景车天线等知识。</description>
    </item>
    
    <item>
      <title>编码</title>
      <link>https://example.org/posts/puzzle-encode/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/puzzle-encode/</guid>
      <description>二进制
Base 家族
特点：由“!+”构成。
JSFuck
BrainFuck
特点：由“&amp;gt;&amp;lt;+-.,[]”构成。</description>
    </item>
    
    <item>
      <title>解谜工具</title>
      <link>https://example.org/posts/puzzle-tool/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0800</pubDate>
      
      <guid>https://example.org/posts/puzzle-tool/</guid>
      <description>综合 不暴力不成活 焖肉面 dCode 查词 Nutrimatic Qat 编码解码 CyberChef 中文 千篇国学：查成语 字統网：部首查字 中文词库 中文诗歌古典文集数据库 逻辑谜题 Noq </description>
    </item>
    
  </channel>
</rss>
